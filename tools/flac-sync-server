#!/usr/bin/env python

from __future__ import print_function
from mutagen.flac import FLAC
import sys
import os
import argparse


class session:

  selectedFile=None
  flac=None

  def detectFile(self, file):
    """Detects if given file exists and selects it."""
    try:
      f=open(file,"r")
      f.close()
      self.selectedFile=file
      self.flac=FLAC(self.selectedFile)
      print('OK')
    except IOError:
      self.selectedFile=None
      self.flac=None
      print('#Not found.')
  
  def fileSize(self):
    """Gives the size of selected file."""
    try:
      print(os.path.getsize(self.selectedFile))
    except IOError:
      self.selectedFile=None
      self.flac=None
      print('#Cannot access.')

  def fileTimestamp(self):
    """Gives the date of selected file."""
    try:
      print(os.path.getmtime(self.selectedFile))
    except IOError:
      self.selectedFile=None
      self.flac=None
      print('#Cannot access.')
      
  def trackSamples(self):
    try:
      print(self.flac.info.total_samples)
    except IOError:
      self.selectedFile=None
      self.flac=None
      print('#Cannot access.')

  def trackMD5(self):
    try:
      print(self.flac.info.md5_signature)
    except IOError:
      self.selectedFile=None
      self.flac=None
      print('#Cannot access.')

  def trackComments(self):
    print(self.flac.pprint())
  
  def trackAddComment(self, tag, values):
    self.flac[tag]=values

  def trackDelComment(self, tag):
    del self.flac[tag]
  
  def writeFile(self):
    try:
      print(self.flac.save())
    except IOError:
      self.selectedFile=None
      self.flac=None
      print('#Cannot access.')

  def writeTimestamp(self, time):
    os.utime(self.selectedFile,(time,time))
    print('OK')

  def releaseFile(self):
    self.selectedFile=None
    self.flac=None
    print('OK')
  
if __name__ == "__main__":

  session=session()

  command=raw_input('>')
  while command!='q':
    cv=command.split()
    if cv[0]=='file':
      session.detectFile(cv[1])
    elif cv[0]=='size':
      session.fileSize()
    elif cv[0]=='getstamp':
      session.fileTimestamp()
    elif cv[0]=='samples':
      session.trackSamples()
    elif cv[0]=='md5':
      session.trackMD5()      
    elif cv[0]=='comments':
      session.trackComments()      
    elif cv[0]=='addcomment':
      session.trackAddComment(cv[1], cv[2:])      
    elif cv[0]=='delcomment':
      session.trackDelComment(cv[1])
    elif cv[0]=='write':
      session.writeFile()            
    elif cv[0]=='setstamp':
      session.writeTimestamp(cv[1])
    elif cv[0]=='release':
      session.releaseFile()            
    else:
      print('#Unknown command.', file=sys.stderr)
    command=raw_input('>')
